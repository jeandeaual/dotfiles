# use 256 term for pretty colors
set -g default-terminal "screen-256color"
set -g status-bg black
set -g status-fg green
setw -g clock-mode-colour brightyellow

# Act like vi
setw -g mode-keys vi

# Version-specific commands
# See: https://github.com/tmux/tmux/blob/master/CHANGES
run-shell "tmux setenv -g TMUX_VERSION $(tmux -V | cut -c 6-)"

# Mouse support
if-shell -b '[ "$(echo "$TMUX_VERSION < 2.1" | bc)" = 1 ]' \
    "set -g mouse-select-pane on; \
     set -g mode-mouse on; \
     set -g mouse-resize-pane on; \
     set -g mouse-select-window on"

# In version 2.1 "mouse" replaced the previous 4 mouse options
if-shell -b '[ "$(echo "$TMUX_VERSION >= 2.1" | bc)" = 1 ]' \
    "set -g mouse on"

# UTF-8 is autodetected in 2.2 onwards, but errors if explicitly set
if-shell -b '[ "$(echo "$TMUX_VERSION < 2.2" | bc)" = 1 ]' \
    "set -g utf8 on; \
     set -g status-utf8 on; \
     set -g mouse-utf8 on"

# Increase scroll-back history
set -g history-limit 1000000

# Decrease command delay (increases vim responsiveness)
set -sg escape-time 0

# Increase repeat time for repeatable commands
set -g repeat-time 1000

# Start window index at 1
set -g base-index 1

# Start pane index at 1
setw -g pane-base-index 1

# Highlight window when it has new activity
setw -g monitor-activity on
set -g visual-activity on

# Re-number windows when one is closed
set -g renumber-windows on

### KEYS ###

# Use C-a as a prefix
# unbind C-b
# set -g prefix C-a
# bind C-a send-prefix

# Use different keys to split vertical and horizonal
# unbind %
# bind v split-window -v
# unbind '"'
# bind s split-window -h

bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# bind C-s choose-session

# Smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"

# Restore clear screen functionality
# With this enabled it is possible to use <prefix> C-l to clear the screen.
bind C-l send-keys 'C-l'

# Copy
bind [ copy-mode
if-shell -b '[ "$(echo "$TMUX_VERSION >= 2.4" | bc)" = 1 ]' \
    "bind -T copy-mode-vi v send-keys -X begin-selection; \
     bind -T copy-mode-vi y send-keys -X copy-selection; \
     bind -T copy-mode-vi V send-keys -X rectangle-toggle; \
     bind -T copy-mode-vi y send -X copy-pipe 'xclip -sel clip -i'"
if-shell -b '[ "$(echo "$TMUX_VERSION < 2.4" | bc)" = 1 ]' \
    "bind -t vi-copy v begin-selection; \
     bind -t vi-copy y copy-selection; \
     bind -t vi-copy V rectangle-toggle; \
     bind -t vi-copy y copy-pipe 'xclip -sel clip -i'"
bind ] paste-buffer
