(define-prefix-command 'digraph-map)
(global-set-key (kbd "C-c d") digraph-map)

;; Vim digraphs
(define-key digraph-map "Ct" '(lambda () (interactive) (insert "¢")))
(define-key digraph-map "Pd" '(lambda () (interactive) (insert "£")))
(define-key digraph-map "Cu" '(lambda () (interactive) (insert "¤")))
(define-key digraph-map "Ye" '(lambda () (interactive) (insert "¥")))
(define-key digraph-map "BB" '(lambda () (interactive) (insert "¦")))
(define-key digraph-map "SE" '(lambda () (interactive) (insert "§")))
(define-key digraph-map "':" '(lambda () (interactive) (insert "¨")))
(define-key digraph-map "Co" '(lambda () (interactive) (insert "©")))
(define-key digraph-map "-a" '(lambda () (interactive) (insert "ª")))
(define-key digraph-map "<<" '(lambda () (interactive) (insert "«")))
(define-key digraph-map "NO" '(lambda () (interactive) (insert "¬")))
(define-key digraph-map "--" '(lambda () (interactive) (insert "­")))
(define-key digraph-map "Rg" '(lambda () (interactive) (insert "®")))
(define-key digraph-map "'m" '(lambda () (interactive) (insert "¯")))
(define-key digraph-map "DG" '(lambda () (interactive) (insert "°")))
(define-key digraph-map "+-" '(lambda () (interactive) (insert "±")))
(define-key digraph-map "2S" '(lambda () (interactive) (insert "²")))
(define-key digraph-map "3S" '(lambda () (interactive) (insert "³")))
(define-key digraph-map "''" '(lambda () (interactive) (insert "´")))
(define-key digraph-map "My" '(lambda () (interactive) (insert "µ")))
(define-key digraph-map "PI" '(lambda () (interactive) (insert "¶")))
(define-key digraph-map ".M" '(lambda () (interactive) (insert "·")))
(define-key digraph-map "'," '(lambda () (interactive) (insert "¸")))
(define-key digraph-map "1S" '(lambda () (interactive) (insert "¹")))
(define-key digraph-map "-o" '(lambda () (interactive) (insert "º")))
(define-key digraph-map ">>" '(lambda () (interactive) (insert "»")))
(define-key digraph-map "14" '(lambda () (interactive) (insert "¼")))
(define-key digraph-map "12" '(lambda () (interactive) (insert "½")))
(define-key digraph-map "34" '(lambda () (interactive) (insert "¾")))
(define-key digraph-map "?I" '(lambda () (interactive) (insert "¿")))
(define-key digraph-map "A!" '(lambda () (interactive) (insert "À")))
(define-key digraph-map "A'" '(lambda () (interactive) (insert "Á")))
(define-key digraph-map "A>" '(lambda () (interactive) (insert "Â")))
(define-key digraph-map "A?" '(lambda () (interactive) (insert "Ã")))
(define-key digraph-map "A:" '(lambda () (interactive) (insert "Ä")))
(define-key digraph-map "AA" '(lambda () (interactive) (insert "Å")))
(define-key digraph-map "AE" '(lambda () (interactive) (insert "Æ")))
(define-key digraph-map "C," '(lambda () (interactive) (insert "Ç")))
(define-key digraph-map "E!" '(lambda () (interactive) (insert "È")))
(define-key digraph-map "E'" '(lambda () (interactive) (insert "É")))
(define-key digraph-map "E>" '(lambda () (interactive) (insert "Ê")))
(define-key digraph-map "E:" '(lambda () (interactive) (insert "Ë")))
(define-key digraph-map "I!" '(lambda () (interactive) (insert "Ì")))
(define-key digraph-map "I'" '(lambda () (interactive) (insert "Í")))
(define-key digraph-map "I>" '(lambda () (interactive) (insert "Î")))
(define-key digraph-map "I:" '(lambda () (interactive) (insert "Ï")))
(define-key digraph-map "D-" '(lambda () (interactive) (insert "Ð")))
(define-key digraph-map "N?" '(lambda () (interactive) (insert "Ñ")))
(define-key digraph-map "O!" '(lambda () (interactive) (insert "Ò")))
(define-key digraph-map "O'" '(lambda () (interactive) (insert "Ó")))
(define-key digraph-map "O>" '(lambda () (interactive) (insert "Ô")))
(define-key digraph-map "O?" '(lambda () (interactive) (insert "Õ")))
(define-key digraph-map "O:" '(lambda () (interactive) (insert "Ö")))
(define-key digraph-map "*X" '(lambda () (interactive) (insert "×")))
(define-key digraph-map "O/" '(lambda () (interactive) (insert "Ø")))
(define-key digraph-map "U!" '(lambda () (interactive) (insert "Ù")))
(define-key digraph-map "U'" '(lambda () (interactive) (insert "Ú")))
(define-key digraph-map "U>" '(lambda () (interactive) (insert "Û")))
(define-key digraph-map "U:" '(lambda () (interactive) (insert "Ü")))
(define-key digraph-map "Y'" '(lambda () (interactive) (insert "Ý")))
(define-key digraph-map "TH" '(lambda () (interactive) (insert "Þ")))
(define-key digraph-map "ss" '(lambda () (interactive) (insert "ß")))
(define-key digraph-map "a!" '(lambda () (interactive) (insert "à")))
(define-key digraph-map "a'" '(lambda () (interactive) (insert "á")))
(define-key digraph-map "a>" '(lambda () (interactive) (insert "â")))
(define-key digraph-map "a?" '(lambda () (interactive) (insert "ã")))
(define-key digraph-map "a:" '(lambda () (interactive) (insert "ä")))
(define-key digraph-map "aa" '(lambda () (interactive) (insert "å")))
(define-key digraph-map "ae" '(lambda () (interactive) (insert "æ")))
(define-key digraph-map "c," '(lambda () (interactive) (insert "ç")))
(define-key digraph-map "e!" '(lambda () (interactive) (insert "è")))
(define-key digraph-map "e'" '(lambda () (interactive) (insert "é")))
(define-key digraph-map "e>" '(lambda () (interactive) (insert "ê")))
(define-key digraph-map "e:" '(lambda () (interactive) (insert "ë")))
(define-key digraph-map "i!" '(lambda () (interactive) (insert "ì")))
(define-key digraph-map "i'" '(lambda () (interactive) (insert "í")))
(define-key digraph-map "i>" '(lambda () (interactive) (insert "î")))
(define-key digraph-map "i:" '(lambda () (interactive) (insert "ï")))
(define-key digraph-map "d-" '(lambda () (interactive) (insert "ð")))
(define-key digraph-map "n?" '(lambda () (interactive) (insert "ñ")))
(define-key digraph-map "o!" '(lambda () (interactive) (insert "ò")))
(define-key digraph-map "o'" '(lambda () (interactive) (insert "ó")))
(define-key digraph-map "o>" '(lambda () (interactive) (insert "ô")))
(define-key digraph-map "o?" '(lambda () (interactive) (insert "õ")))
(define-key digraph-map "o:" '(lambda () (interactive) (insert "ö")))
(define-key digraph-map "-:" '(lambda () (interactive) (insert "÷")))
(define-key digraph-map "o/" '(lambda () (interactive) (insert "ø")))
(define-key digraph-map "u!" '(lambda () (interactive) (insert "ù")))
(define-key digraph-map "u'" '(lambda () (interactive) (insert "ú")))
(define-key digraph-map "u>" '(lambda () (interactive) (insert "û")))
(define-key digraph-map "u:" '(lambda () (interactive) (insert "ü")))
(define-key digraph-map "y'" '(lambda () (interactive) (insert "ý")))
(define-key digraph-map "th" '(lambda () (interactive) (insert "þ")))
(define-key digraph-map "y:" '(lambda () (interactive) (insert "ÿ")))
(define-key digraph-map "A-" '(lambda () (interactive) (insert "Ā")))
(define-key digraph-map "a-" '(lambda () (interactive) (insert "ā")))
(define-key digraph-map "A(" '(lambda () (interactive) (insert "Ă")))
(define-key digraph-map "a(" '(lambda () (interactive) (insert "ă")))
(define-key digraph-map "A;" '(lambda () (interactive) (insert "Ą")))
(define-key digraph-map "a;" '(lambda () (interactive) (insert "ą")))
(define-key digraph-map "C'" '(lambda () (interactive) (insert "Ć")))
(define-key digraph-map "c'" '(lambda () (interactive) (insert "ć")))
(define-key digraph-map "C>" '(lambda () (interactive) (insert "Ĉ")))
(define-key digraph-map "c>" '(lambda () (interactive) (insert "ĉ")))
(define-key digraph-map "C." '(lambda () (interactive) (insert "Ċ")))
(define-key digraph-map "c." '(lambda () (interactive) (insert "ċ")))
(define-key digraph-map "C<" '(lambda () (interactive) (insert "Č")))
(define-key digraph-map "c<" '(lambda () (interactive) (insert "č")))
(define-key digraph-map "D<" '(lambda () (interactive) (insert "Ď")))
(define-key digraph-map "d<" '(lambda () (interactive) (insert "ď")))
(define-key digraph-map "D/" '(lambda () (interactive) (insert "Đ")))
(define-key digraph-map "d/" '(lambda () (interactive) (insert "đ")))
(define-key digraph-map "E-" '(lambda () (interactive) (insert "Ē")))
(define-key digraph-map "e-" '(lambda () (interactive) (insert "ē")))
(define-key digraph-map "E(" '(lambda () (interactive) (insert "Ĕ")))
(define-key digraph-map "e(" '(lambda () (interactive) (insert "ĕ")))
(define-key digraph-map "E." '(lambda () (interactive) (insert "Ė")))
(define-key digraph-map "e." '(lambda () (interactive) (insert "ė")))
(define-key digraph-map "E;" '(lambda () (interactive) (insert "Ę")))
(define-key digraph-map "e;" '(lambda () (interactive) (insert "ę")))
(define-key digraph-map "E<" '(lambda () (interactive) (insert "Ě")))
(define-key digraph-map "e<" '(lambda () (interactive) (insert "ě")))
(define-key digraph-map "G>" '(lambda () (interactive) (insert "Ĝ")))
(define-key digraph-map "g>" '(lambda () (interactive) (insert "ĝ")))
(define-key digraph-map "G(" '(lambda () (interactive) (insert "Ğ")))
(define-key digraph-map "g(" '(lambda () (interactive) (insert "ğ")))
(define-key digraph-map "G." '(lambda () (interactive) (insert "Ġ")))
(define-key digraph-map "g." '(lambda () (interactive) (insert "ġ")))
(define-key digraph-map "G," '(lambda () (interactive) (insert "Ģ")))
(define-key digraph-map "g," '(lambda () (interactive) (insert "ģ")))
(define-key digraph-map "H>" '(lambda () (interactive) (insert "Ĥ")))
(define-key digraph-map "h>" '(lambda () (interactive) (insert "ĥ")))
(define-key digraph-map "H/" '(lambda () (interactive) (insert "Ħ")))
(define-key digraph-map "h/" '(lambda () (interactive) (insert "ħ")))
(define-key digraph-map "I?" '(lambda () (interactive) (insert "Ĩ")))
(define-key digraph-map "i?" '(lambda () (interactive) (insert "ĩ")))
(define-key digraph-map "I-" '(lambda () (interactive) (insert "Ī")))
(define-key digraph-map "i-" '(lambda () (interactive) (insert "ī")))
(define-key digraph-map "I(" '(lambda () (interactive) (insert "Ĭ")))
(define-key digraph-map "i(" '(lambda () (interactive) (insert "ĭ")))
(define-key digraph-map "I;" '(lambda () (interactive) (insert "Į")))
(define-key digraph-map "i;" '(lambda () (interactive) (insert "į")))
(define-key digraph-map "I." '(lambda () (interactive) (insert "İ")))
(define-key digraph-map "i." '(lambda () (interactive) (insert "ı")))
(define-key digraph-map "IJ" '(lambda () (interactive) (insert "Ĳ")))
(define-key digraph-map "ij" '(lambda () (interactive) (insert "ĳ")))
(define-key digraph-map "J>" '(lambda () (interactive) (insert "Ĵ")))
(define-key digraph-map "j>" '(lambda () (interactive) (insert "ĵ")))
(define-key digraph-map "K," '(lambda () (interactive) (insert "Ķ")))
(define-key digraph-map "k," '(lambda () (interactive) (insert "ķ")))
(define-key digraph-map "kk" '(lambda () (interactive) (insert "ĸ")))
(define-key digraph-map "L'" '(lambda () (interactive) (insert "Ĺ")))
(define-key digraph-map "l'" '(lambda () (interactive) (insert "ĺ")))
(define-key digraph-map "L," '(lambda () (interactive) (insert "Ļ")))
(define-key digraph-map "l," '(lambda () (interactive) (insert "ļ")))
(define-key digraph-map "L<" '(lambda () (interactive) (insert "Ľ")))
(define-key digraph-map "l<" '(lambda () (interactive) (insert "ľ")))
(define-key digraph-map "L." '(lambda () (interactive) (insert "Ŀ")))
(define-key digraph-map "l." '(lambda () (interactive) (insert "ŀ")))
(define-key digraph-map "L/" '(lambda () (interactive) (insert "Ł")))
(define-key digraph-map "l/" '(lambda () (interactive) (insert "ł")))
(define-key digraph-map "N'" '(lambda () (interactive) (insert "Ń")))
(define-key digraph-map "n'" '(lambda () (interactive) (insert "ń")))
(define-key digraph-map "N," '(lambda () (interactive) (insert "Ņ")))
(define-key digraph-map "n," '(lambda () (interactive) (insert "ņ")))
(define-key digraph-map "N<" '(lambda () (interactive) (insert "Ň")))
(define-key digraph-map "n<" '(lambda () (interactive) (insert "ň")))
(define-key digraph-map "'n" '(lambda () (interactive) (insert "ŉ")))
(define-key digraph-map "NG" '(lambda () (interactive) (insert "Ŋ")))
(define-key digraph-map "ng" '(lambda () (interactive) (insert "ŋ")))
(define-key digraph-map "O-" '(lambda () (interactive) (insert "Ō")))
(define-key digraph-map "o-" '(lambda () (interactive) (insert "ō")))
(define-key digraph-map "O(" '(lambda () (interactive) (insert "Ŏ")))
(define-key digraph-map "o(" '(lambda () (interactive) (insert "ŏ")))
(define-key digraph-map "O\"" '(lambda () (interactive) (insert "Ő")))
(define-key digraph-map "o\"" '(lambda () (interactive) (insert "ő")))
(define-key digraph-map "OE" '(lambda () (interactive) (insert "Œ")))
(define-key digraph-map "oe" '(lambda () (interactive) (insert "œ")))
(define-key digraph-map "R'" '(lambda () (interactive) (insert "Ŕ")))
(define-key digraph-map "r'" '(lambda () (interactive) (insert "ŕ")))
(define-key digraph-map "R," '(lambda () (interactive) (insert "Ŗ")))
(define-key digraph-map "r," '(lambda () (interactive) (insert "ŗ")))
(define-key digraph-map "R<" '(lambda () (interactive) (insert "Ř")))
(define-key digraph-map "r<" '(lambda () (interactive) (insert "ř")))
(define-key digraph-map "S'" '(lambda () (interactive) (insert "Ś")))
(define-key digraph-map "s'" '(lambda () (interactive) (insert "ś")))
(define-key digraph-map "S>" '(lambda () (interactive) (insert "Ŝ")))
(define-key digraph-map "s>" '(lambda () (interactive) (insert "ŝ")))
(define-key digraph-map "S," '(lambda () (interactive) (insert "Ş")))
(define-key digraph-map "s," '(lambda () (interactive) (insert "ş")))
(define-key digraph-map "S<" '(lambda () (interactive) (insert "Š")))
(define-key digraph-map "s<" '(lambda () (interactive) (insert "š")))
(define-key digraph-map "T," '(lambda () (interactive) (insert "Ţ")))
(define-key digraph-map "t," '(lambda () (interactive) (insert "ţ")))
(define-key digraph-map "T<" '(lambda () (interactive) (insert "Ť")))
(define-key digraph-map "t<" '(lambda () (interactive) (insert "ť")))
(define-key digraph-map "T/" '(lambda () (interactive) (insert "Ŧ")))
(define-key digraph-map "t/" '(lambda () (interactive) (insert "ŧ")))
(define-key digraph-map "U?" '(lambda () (interactive) (insert "Ũ")))
(define-key digraph-map "u?" '(lambda () (interactive) (insert "ũ")))
(define-key digraph-map "U-" '(lambda () (interactive) (insert "Ū")))
(define-key digraph-map "u-" '(lambda () (interactive) (insert "ū")))
(define-key digraph-map "U(" '(lambda () (interactive) (insert "Ŭ")))
(define-key digraph-map "u(" '(lambda () (interactive) (insert "ŭ")))
(define-key digraph-map "U0" '(lambda () (interactive) (insert "Ů")))
(define-key digraph-map "u0" '(lambda () (interactive) (insert "ů")))
(define-key digraph-map "U\"" '(lambda () (interactive) (insert "Ű")))
(define-key digraph-map "u\"" '(lambda () (interactive) (insert "ű")))
(define-key digraph-map "U;" '(lambda () (interactive) (insert "Ų")))
(define-key digraph-map "u;" '(lambda () (interactive) (insert "ų")))
(define-key digraph-map "W>" '(lambda () (interactive) (insert "Ŵ")))
(define-key digraph-map "w>" '(lambda () (interactive) (insert "ŵ")))
(define-key digraph-map "Y>" '(lambda () (interactive) (insert "Ŷ")))
(define-key digraph-map "y>" '(lambda () (interactive) (insert "ŷ")))
(define-key digraph-map "Y:" '(lambda () (interactive) (insert "Ÿ")))
(define-key digraph-map "Z'" '(lambda () (interactive) (insert "Ź")))
(define-key digraph-map "z'" '(lambda () (interactive) (insert "ź")))
(define-key digraph-map "Z." '(lambda () (interactive) (insert "Ż")))
(define-key digraph-map "z." '(lambda () (interactive) (insert "ż")))
(define-key digraph-map "Z<" '(lambda () (interactive) (insert "Ž")))
(define-key digraph-map "z<" '(lambda () (interactive) (insert "ž")))
(define-key digraph-map "O9" '(lambda () (interactive) (insert "Ơ")))
(define-key digraph-map "o9" '(lambda () (interactive) (insert "ơ")))
(define-key digraph-map "OI" '(lambda () (interactive) (insert "Ƣ")))
(define-key digraph-map "oi" '(lambda () (interactive) (insert "ƣ")))
(define-key digraph-map "yr" '(lambda () (interactive) (insert "Ʀ")))
(define-key digraph-map "U9" '(lambda () (interactive) (insert "Ư")))
(define-key digraph-map "u9" '(lambda () (interactive) (insert "ư")))
(define-key digraph-map "Z/" '(lambda () (interactive) (insert "Ƶ")))
(define-key digraph-map "z/" '(lambda () (interactive) (insert "ƶ")))
(define-key digraph-map "ED" '(lambda () (interactive) (insert "Ʒ")))
(define-key digraph-map "A<" '(lambda () (interactive) (insert "Ǎ")))
(define-key digraph-map "a<" '(lambda () (interactive) (insert "ǎ")))
(define-key digraph-map "I<" '(lambda () (interactive) (insert "Ǐ")))
(define-key digraph-map "i<" '(lambda () (interactive) (insert "ǐ")))
(define-key digraph-map "O<" '(lambda () (interactive) (insert "Ǒ")))
(define-key digraph-map "o<" '(lambda () (interactive) (insert "ǒ")))
(define-key digraph-map "U<" '(lambda () (interactive) (insert "Ǔ")))
(define-key digraph-map "u<" '(lambda () (interactive) (insert "ǔ")))
(define-key digraph-map "A1" '(lambda () (interactive) (insert "Ǟ")))
(define-key digraph-map "a1" '(lambda () (interactive) (insert "ǟ")))
(define-key digraph-map "A7" '(lambda () (interactive) (insert "Ǡ")))
(define-key digraph-map "a7" '(lambda () (interactive) (insert "ǡ")))
(define-key digraph-map "A3" '(lambda () (interactive) (insert "Ǣ")))
(define-key digraph-map "a3" '(lambda () (interactive) (insert "ǣ")))
(define-key digraph-map "G/" '(lambda () (interactive) (insert "Ǥ")))
(define-key digraph-map "g/" '(lambda () (interactive) (insert "ǥ")))
(define-key digraph-map "G<" '(lambda () (interactive) (insert "Ǧ")))
(define-key digraph-map "g<" '(lambda () (interactive) (insert "ǧ")))
(define-key digraph-map "K<" '(lambda () (interactive) (insert "Ǩ")))
(define-key digraph-map "k<" '(lambda () (interactive) (insert "ǩ")))
(define-key digraph-map "O;" '(lambda () (interactive) (insert "Ǫ")))
(define-key digraph-map "o;" '(lambda () (interactive) (insert "ǫ")))
(define-key digraph-map "O1" '(lambda () (interactive) (insert "Ǭ")))
(define-key digraph-map "o1" '(lambda () (interactive) (insert "ǭ")))
(define-key digraph-map "EZ" '(lambda () (interactive) (insert "Ǯ")))
(define-key digraph-map "ez" '(lambda () (interactive) (insert "ǯ")))
(define-key digraph-map "j<" '(lambda () (interactive) (insert "ǰ")))
(define-key digraph-map "G'" '(lambda () (interactive) (insert "Ǵ")))
(define-key digraph-map "g'" '(lambda () (interactive) (insert "ǵ")))
(define-key digraph-map ";S" '(lambda () (interactive) (insert "ʿ")))
(define-key digraph-map "'<" '(lambda () (interactive) (insert "ˇ")))
(define-key digraph-map "'(" '(lambda () (interactive) (insert "˘")))
(define-key digraph-map "'." '(lambda () (interactive) (insert "˙")))
(define-key digraph-map "'0" '(lambda () (interactive) (insert "˚")))
(define-key digraph-map "';" '(lambda () (interactive) (insert "˛")))
(define-key digraph-map "'\"" '(lambda () (interactive) (insert "˝")))
(define-key digraph-map "-1" '(lambda () (interactive) (insert "‐")))
(define-key digraph-map "-N" '(lambda () (interactive) (insert "–")))
(define-key digraph-map "-M" '(lambda () (interactive) (insert "—")))
(define-key digraph-map "-3" '(lambda () (interactive) (insert "―")))
(define-key digraph-map "!2" '(lambda () (interactive) (insert "‖")))
(define-key digraph-map "=2" '(lambda () (interactive) (insert "‗")))
(define-key digraph-map "'6" '(lambda () (interactive) (insert "‘")))
(define-key digraph-map "'9" '(lambda () (interactive) (insert "’")))
(define-key digraph-map ".9" '(lambda () (interactive) (insert "‚")))
(define-key digraph-map "9'" '(lambda () (interactive) (insert "‛")))
(define-key digraph-map "\"6" '(lambda () (interactive) (insert "“")))
(define-key digraph-map "\"9" '(lambda () (interactive) (insert "”")))
(define-key digraph-map ":9" '(lambda () (interactive) (insert "„")))
(define-key digraph-map "9\"" '(lambda () (interactive) (insert "‟")))
(define-key digraph-map "/-" '(lambda () (interactive) (insert "†")))
(define-key digraph-map "/=" '(lambda () (interactive) (insert "‡")))
(define-key digraph-map ".." '(lambda () (interactive) (insert "‥")))
(define-key digraph-map "%0" '(lambda () (interactive) (insert "‰")))
(define-key digraph-map "1'" '(lambda () (interactive) (insert "′")))
(define-key digraph-map "2'" '(lambda () (interactive) (insert "″")))
(define-key digraph-map "3'" '(lambda () (interactive) (insert "‴")))
(define-key digraph-map "1\"" '(lambda () (interactive) (insert "‵")))
(define-key digraph-map "2\"" '(lambda () (interactive) (insert "‶")))
(define-key digraph-map "3\"" '(lambda () (interactive) (insert "‷")))
(define-key digraph-map "Ca" '(lambda () (interactive) (insert "‸")))
(define-key digraph-map "<1" '(lambda () (interactive) (insert "‹")))
(define-key digraph-map ">1" '(lambda () (interactive) (insert "›")))
(define-key digraph-map ":X" '(lambda () (interactive) (insert "※")))
(define-key digraph-map "'-" '(lambda () (interactive) (insert "‾")))
(define-key digraph-map "/f" '(lambda () (interactive) (insert "⁄")))
(define-key digraph-map "0S" '(lambda () (interactive) (insert "⁰")))
(define-key digraph-map "4S" '(lambda () (interactive) (insert "⁴")))
(define-key digraph-map "5S" '(lambda () (interactive) (insert "⁵")))
(define-key digraph-map "6S" '(lambda () (interactive) (insert "⁶")))
(define-key digraph-map "7S" '(lambda () (interactive) (insert "⁷")))
(define-key digraph-map "8S" '(lambda () (interactive) (insert "⁸")))
(define-key digraph-map "9S" '(lambda () (interactive) (insert "⁹")))
(define-key digraph-map "+S" '(lambda () (interactive) (insert "⁺")))
(define-key digraph-map "-S" '(lambda () (interactive) (insert "⁻")))
(define-key digraph-map "=S" '(lambda () (interactive) (insert "⁼")))
(define-key digraph-map "(S" '(lambda () (interactive) (insert "⁽")))
(define-key digraph-map ")S" '(lambda () (interactive) (insert "⁾")))
(define-key digraph-map "nS" '(lambda () (interactive) (insert "ⁿ")))
(define-key digraph-map "0s" '(lambda () (interactive) (insert "₀")))
(define-key digraph-map "1s" '(lambda () (interactive) (insert "₁")))
(define-key digraph-map "2s" '(lambda () (interactive) (insert "₂")))
(define-key digraph-map "3s" '(lambda () (interactive) (insert "₃")))
(define-key digraph-map "4s" '(lambda () (interactive) (insert "₄")))
(define-key digraph-map "5s" '(lambda () (interactive) (insert "₅")))
(define-key digraph-map "6s" '(lambda () (interactive) (insert "₆")))
(define-key digraph-map "7s" '(lambda () (interactive) (insert "₇")))
(define-key digraph-map "8s" '(lambda () (interactive) (insert "₈")))
(define-key digraph-map "9s" '(lambda () (interactive) (insert "₉")))
(define-key digraph-map "+s" '(lambda () (interactive) (insert "₊")))
(define-key digraph-map "-s" '(lambda () (interactive) (insert "₋")))
(define-key digraph-map "=s" '(lambda () (interactive) (insert "₌")))
(define-key digraph-map "(s" '(lambda () (interactive) (insert "₍")))
(define-key digraph-map ")s" '(lambda () (interactive) (insert "₎")))
(define-key digraph-map "Li" '(lambda () (interactive) (insert "₤")))
(define-key digraph-map "Pt" '(lambda () (interactive) (insert "₧")))
(define-key digraph-map "W=" '(lambda () (interactive) (insert "₩")))
(define-key digraph-map "=e" '(lambda () (interactive) (insert "€")))
(define-key digraph-map "Eu" '(lambda () (interactive) (insert "€")))
(define-key digraph-map "oC" '(lambda () (interactive) (insert "℃")))
(define-key digraph-map "co" '(lambda () (interactive) (insert "℅")))
(define-key digraph-map "oF" '(lambda () (interactive) (insert "℉")))
(define-key digraph-map "N0" '(lambda () (interactive) (insert "№")))
(define-key digraph-map "PO" '(lambda () (interactive) (insert "℗")))
(define-key digraph-map "Rx" '(lambda () (interactive) (insert "℞")))
(define-key digraph-map "SM" '(lambda () (interactive) (insert "℠")))
(define-key digraph-map "TM" '(lambda () (interactive) (insert "™")))
(define-key digraph-map "Om" '(lambda () (interactive) (insert "Ω")))
(define-key digraph-map "AO" '(lambda () (interactive) (insert "Å")))
(define-key digraph-map "13" '(lambda () (interactive) (insert "⅓")))
(define-key digraph-map "23" '(lambda () (interactive) (insert "⅔")))
(define-key digraph-map "15" '(lambda () (interactive) (insert "⅕")))
(define-key digraph-map "25" '(lambda () (interactive) (insert "⅖")))
(define-key digraph-map "35" '(lambda () (interactive) (insert "⅗")))
(define-key digraph-map "45" '(lambda () (interactive) (insert "⅘")))
(define-key digraph-map "16" '(lambda () (interactive) (insert "⅙")))
(define-key digraph-map "56" '(lambda () (interactive) (insert "⅚")))
(define-key digraph-map "18" '(lambda () (interactive) (insert "⅛")))
(define-key digraph-map "38" '(lambda () (interactive) (insert "⅜")))
(define-key digraph-map "58" '(lambda () (interactive) (insert "⅝")))
(define-key digraph-map "78" '(lambda () (interactive) (insert "⅞")))
(define-key digraph-map "1R" '(lambda () (interactive) (insert "Ⅰ")))
(define-key digraph-map "2R" '(lambda () (interactive) (insert "Ⅱ")))
(define-key digraph-map "3R" '(lambda () (interactive) (insert "Ⅲ")))
(define-key digraph-map "4R" '(lambda () (interactive) (insert "Ⅳ")))
(define-key digraph-map "5R" '(lambda () (interactive) (insert "Ⅴ")))
(define-key digraph-map "6R" '(lambda () (interactive) (insert "Ⅵ")))
(define-key digraph-map "7R" '(lambda () (interactive) (insert "Ⅶ")))
(define-key digraph-map "8R" '(lambda () (interactive) (insert "Ⅷ")))
(define-key digraph-map "9R" '(lambda () (interactive) (insert "Ⅸ")))
(define-key digraph-map "aR" '(lambda () (interactive) (insert "Ⅹ")))
(define-key digraph-map "bR" '(lambda () (interactive) (insert "Ⅺ")))
(define-key digraph-map "cR" '(lambda () (interactive) (insert "Ⅻ")))
(define-key digraph-map "1r" '(lambda () (interactive) (insert "ⅰ")))
(define-key digraph-map "2r" '(lambda () (interactive) (insert "ⅱ")))
(define-key digraph-map "3r" '(lambda () (interactive) (insert "ⅲ")))
(define-key digraph-map "4r" '(lambda () (interactive) (insert "ⅳ")))
(define-key digraph-map "5r" '(lambda () (interactive) (insert "ⅴ")))
(define-key digraph-map "6r" '(lambda () (interactive) (insert "ⅵ")))
(define-key digraph-map "7r" '(lambda () (interactive) (insert "ⅶ")))
(define-key digraph-map "8r" '(lambda () (interactive) (insert "ⅷ")))
(define-key digraph-map "9r" '(lambda () (interactive) (insert "ⅸ")))
(define-key digraph-map "ar" '(lambda () (interactive) (insert "ⅹ")))
(define-key digraph-map "br" '(lambda () (interactive) (insert "ⅺ")))
(define-key digraph-map "cr" '(lambda () (interactive) (insert "ⅻ")))
(define-key digraph-map "<-" '(lambda () (interactive) (insert "←")))
(define-key digraph-map "-!" '(lambda () (interactive) (insert "↑")))
(define-key digraph-map "->" '(lambda () (interactive) (insert "→")))
(define-key digraph-map "-v" '(lambda () (interactive) (insert "↓")))
(define-key digraph-map "<>" '(lambda () (interactive) (insert "↔")))
(define-key digraph-map "UD" '(lambda () (interactive) (insert "↕")))
(define-key digraph-map "<=" '(lambda () (interactive) (insert "⇐")))
(define-key digraph-map "=>" '(lambda () (interactive) (insert "⇒")))
(define-key digraph-map "==" '(lambda () (interactive) (insert "⇔")))
(define-key digraph-map "FA" '(lambda () (interactive) (insert "∀")))
(define-key digraph-map "dP" '(lambda () (interactive) (insert "∂")))
(define-key digraph-map "TE" '(lambda () (interactive) (insert "∃")))
(define-key digraph-map "/0" '(lambda () (interactive) (insert "∅")))
(define-key digraph-map "DE" '(lambda () (interactive) (insert "∆")))
(define-key digraph-map "NB" '(lambda () (interactive) (insert "∇")))
(define-key digraph-map "(-" '(lambda () (interactive) (insert "∈")))
(define-key digraph-map "-)" '(lambda () (interactive) (insert "∋")))
(define-key digraph-map "*P" '(lambda () (interactive) (insert "∏")))
(define-key digraph-map "+Z" '(lambda () (interactive) (insert "∑")))
(define-key digraph-map "-2" '(lambda () (interactive) (insert "−")))
(define-key digraph-map "-+" '(lambda () (interactive) (insert "∓")))
(define-key digraph-map "*-" '(lambda () (interactive) (insert "∗")))
(define-key digraph-map "Ob" '(lambda () (interactive) (insert "∘")))
(define-key digraph-map "Sb" '(lambda () (interactive) (insert "∙")))
(define-key digraph-map "RT" '(lambda () (interactive) (insert "√")))
(define-key digraph-map "0(" '(lambda () (interactive) (insert "∝")))
(define-key digraph-map "00" '(lambda () (interactive) (insert "∞")))
(define-key digraph-map "-L" '(lambda () (interactive) (insert "∟")))
(define-key digraph-map "-V" '(lambda () (interactive) (insert "∠")))
(define-key digraph-map "PP" '(lambda () (interactive) (insert "∥")))
(define-key digraph-map "AN" '(lambda () (interactive) (insert "∧")))
(define-key digraph-map "OR" '(lambda () (interactive) (insert "∨")))
(define-key digraph-map "(U" '(lambda () (interactive) (insert "∩")))
(define-key digraph-map ")U" '(lambda () (interactive) (insert "∪")))
(define-key digraph-map "In" '(lambda () (interactive) (insert "∫")))
(define-key digraph-map "DI" '(lambda () (interactive) (insert "∬")))
(define-key digraph-map "Io" '(lambda () (interactive) (insert "∮")))
(define-key digraph-map ".:" '(lambda () (interactive) (insert "∴")))
(define-key digraph-map ":." '(lambda () (interactive) (insert "∵")))
(define-key digraph-map ":R" '(lambda () (interactive) (insert "∶")))
(define-key digraph-map "::" '(lambda () (interactive) (insert "∷")))
(define-key digraph-map "?1" '(lambda () (interactive) (insert "∼")))
(define-key digraph-map "CG" '(lambda () (interactive) (insert "∾")))
(define-key digraph-map "?-" '(lambda () (interactive) (insert "≃")))
(define-key digraph-map "?=" '(lambda () (interactive) (insert "≅")))
(define-key digraph-map "?2" '(lambda () (interactive) (insert "≈")))
(define-key digraph-map "=?" '(lambda () (interactive) (insert "≌")))
(define-key digraph-map "HI" '(lambda () (interactive) (insert "≓")))
(define-key digraph-map "!=" '(lambda () (interactive) (insert "≠")))
(define-key digraph-map "=3" '(lambda () (interactive) (insert "≡")))
(define-key digraph-map "=<" '(lambda () (interactive) (insert "≤")))
(define-key digraph-map ">=" '(lambda () (interactive) (insert "≥")))
(define-key digraph-map "=T" '(lambda () (interactive) (insert "〒")))
(define-key digraph-map "=_" '(lambda () (interactive) (insert "〓")))
(define-key digraph-map "('" '(lambda () (interactive) (insert "〔")))
(define-key digraph-map ")'" '(lambda () (interactive) (insert "〕")))
(define-key digraph-map "(I" '(lambda () (interactive) (insert "〖")))
(define-key digraph-map ")I" '(lambda () (interactive) (insert "〗")))
(define-key digraph-map "-?" '(lambda () (interactive) (insert "〜")))
(define-key digraph-map "A5" '(lambda () (interactive) (insert "ぁ")))
(define-key digraph-map "a5" '(lambda () (interactive) (insert "あ")))
(define-key digraph-map "I5" '(lambda () (interactive) (insert "ぃ")))
(define-key digraph-map "i5" '(lambda () (interactive) (insert "い")))
(define-key digraph-map "U5" '(lambda () (interactive) (insert "ぅ")))
(define-key digraph-map "u5" '(lambda () (interactive) (insert "う")))
(define-key digraph-map "E5" '(lambda () (interactive) (insert "ぇ")))
(define-key digraph-map "e5" '(lambda () (interactive) (insert "え")))
(define-key digraph-map "O5" '(lambda () (interactive) (insert "ぉ")))
(define-key digraph-map "o5" '(lambda () (interactive) (insert "お")))
(define-key digraph-map "ka" '(lambda () (interactive) (insert "か")))
(define-key digraph-map "ga" '(lambda () (interactive) (insert "が")))
(define-key digraph-map "ki" '(lambda () (interactive) (insert "き")))
(define-key digraph-map "gi" '(lambda () (interactive) (insert "ぎ")))
(define-key digraph-map "ku" '(lambda () (interactive) (insert "く")))
(define-key digraph-map "gu" '(lambda () (interactive) (insert "ぐ")))
(define-key digraph-map "ke" '(lambda () (interactive) (insert "け")))
(define-key digraph-map "ge" '(lambda () (interactive) (insert "げ")))
(define-key digraph-map "ko" '(lambda () (interactive) (insert "こ")))
(define-key digraph-map "go" '(lambda () (interactive) (insert "ご")))
(define-key digraph-map "sa" '(lambda () (interactive) (insert "さ")))
(define-key digraph-map "za" '(lambda () (interactive) (insert "ざ")))
(define-key digraph-map "si" '(lambda () (interactive) (insert "し")))
(define-key digraph-map "zi" '(lambda () (interactive) (insert "じ")))
(define-key digraph-map "su" '(lambda () (interactive) (insert "す")))
(define-key digraph-map "zu" '(lambda () (interactive) (insert "ず")))
(define-key digraph-map "se" '(lambda () (interactive) (insert "せ")))
(define-key digraph-map "ze" '(lambda () (interactive) (insert "ぜ")))
(define-key digraph-map "so" '(lambda () (interactive) (insert "そ")))
(define-key digraph-map "zo" '(lambda () (interactive) (insert "ぞ")))
(define-key digraph-map "ta" '(lambda () (interactive) (insert "た")))
(define-key digraph-map "da" '(lambda () (interactive) (insert "だ")))
(define-key digraph-map "ti" '(lambda () (interactive) (insert "ち")))
(define-key digraph-map "di" '(lambda () (interactive) (insert "ぢ")))
(define-key digraph-map "tU" '(lambda () (interactive) (insert "っ")))
(define-key digraph-map "tu" '(lambda () (interactive) (insert "つ")))
(define-key digraph-map "du" '(lambda () (interactive) (insert "づ")))
(define-key digraph-map "te" '(lambda () (interactive) (insert "て")))
(define-key digraph-map "de" '(lambda () (interactive) (insert "で")))
(define-key digraph-map "to" '(lambda () (interactive) (insert "と")))
(define-key digraph-map "do" '(lambda () (interactive) (insert "ど")))
(define-key digraph-map "na" '(lambda () (interactive) (insert "な")))
(define-key digraph-map "ni" '(lambda () (interactive) (insert "に")))
(define-key digraph-map "nu" '(lambda () (interactive) (insert "ぬ")))
(define-key digraph-map "ne" '(lambda () (interactive) (insert "ね")))
(define-key digraph-map "no" '(lambda () (interactive) (insert "の")))
(define-key digraph-map "ha" '(lambda () (interactive) (insert "は")))
(define-key digraph-map "ba" '(lambda () (interactive) (insert "ば")))
(define-key digraph-map "pa" '(lambda () (interactive) (insert "ぱ")))
(define-key digraph-map "hi" '(lambda () (interactive) (insert "ひ")))
(define-key digraph-map "bi" '(lambda () (interactive) (insert "び")))
(define-key digraph-map "pi" '(lambda () (interactive) (insert "ぴ")))
(define-key digraph-map "hu" '(lambda () (interactive) (insert "ふ")))
(define-key digraph-map "bu" '(lambda () (interactive) (insert "ぶ")))
(define-key digraph-map "pu" '(lambda () (interactive) (insert "ぷ")))
(define-key digraph-map "he" '(lambda () (interactive) (insert "へ")))
(define-key digraph-map "be" '(lambda () (interactive) (insert "べ")))
(define-key digraph-map "pe" '(lambda () (interactive) (insert "ぺ")))
(define-key digraph-map "ho" '(lambda () (interactive) (insert "ほ")))
(define-key digraph-map "bo" '(lambda () (interactive) (insert "ぼ")))
(define-key digraph-map "po" '(lambda () (interactive) (insert "ぽ")))
(define-key digraph-map "ma" '(lambda () (interactive) (insert "ま")))
(define-key digraph-map "mi" '(lambda () (interactive) (insert "み")))
(define-key digraph-map "mu" '(lambda () (interactive) (insert "む")))
(define-key digraph-map "me" '(lambda () (interactive) (insert "め")))
(define-key digraph-map "mo" '(lambda () (interactive) (insert "も")))
(define-key digraph-map "yA" '(lambda () (interactive) (insert "ゃ")))
(define-key digraph-map "ya" '(lambda () (interactive) (insert "や")))
(define-key digraph-map "yU" '(lambda () (interactive) (insert "ゅ")))
(define-key digraph-map "yu" '(lambda () (interactive) (insert "ゆ")))
(define-key digraph-map "yO" '(lambda () (interactive) (insert "ょ")))
(define-key digraph-map "yo" '(lambda () (interactive) (insert "よ")))
(define-key digraph-map "ra" '(lambda () (interactive) (insert "ら")))
(define-key digraph-map "ri" '(lambda () (interactive) (insert "り")))
(define-key digraph-map "ru" '(lambda () (interactive) (insert "る")))
(define-key digraph-map "re" '(lambda () (interactive) (insert "れ")))
(define-key digraph-map "ro" '(lambda () (interactive) (insert "ろ")))
(define-key digraph-map "wA" '(lambda () (interactive) (insert "ゎ")))
(define-key digraph-map "wa" '(lambda () (interactive) (insert "わ")))
(define-key digraph-map "wi" '(lambda () (interactive) (insert "ゐ")))
(define-key digraph-map "we" '(lambda () (interactive) (insert "ゑ")))
(define-key digraph-map "wo" '(lambda () (interactive) (insert "を")))
(define-key digraph-map "n5" '(lambda () (interactive) (insert "ん")))
(define-key digraph-map "vu" '(lambda () (interactive) (insert "ゔ")))
(define-key digraph-map "\"5" '(lambda () (interactive) (insert "゛")))
(define-key digraph-map "05" '(lambda () (interactive) (insert "゜")))
(define-key digraph-map "*5" '(lambda () (interactive) (insert "ゝ")))
(define-key digraph-map "+5" '(lambda () (interactive) (insert "ゞ")))
(define-key digraph-map "a6" '(lambda () (interactive) (insert "ァ")))
(define-key digraph-map "A6" '(lambda () (interactive) (insert "ア")))
(define-key digraph-map "i6" '(lambda () (interactive) (insert "ィ")))
(define-key digraph-map "I6" '(lambda () (interactive) (insert "イ")))
(define-key digraph-map "u6" '(lambda () (interactive) (insert "ゥ")))
(define-key digraph-map "U6" '(lambda () (interactive) (insert "ウ")))
(define-key digraph-map "e6" '(lambda () (interactive) (insert "ェ")))
(define-key digraph-map "E6" '(lambda () (interactive) (insert "エ")))
(define-key digraph-map "o6" '(lambda () (interactive) (insert "ォ")))
(define-key digraph-map "O6" '(lambda () (interactive) (insert "オ")))
(define-key digraph-map "Ka" '(lambda () (interactive) (insert "カ")))
(define-key digraph-map "Ga" '(lambda () (interactive) (insert "ガ")))
(define-key digraph-map "Ki" '(lambda () (interactive) (insert "キ")))
(define-key digraph-map "Gi" '(lambda () (interactive) (insert "ギ")))
(define-key digraph-map "Ku" '(lambda () (interactive) (insert "ク")))
(define-key digraph-map "Gu" '(lambda () (interactive) (insert "グ")))
(define-key digraph-map "Ke" '(lambda () (interactive) (insert "ケ")))
(define-key digraph-map "Ge" '(lambda () (interactive) (insert "ゲ")))
(define-key digraph-map "Ko" '(lambda () (interactive) (insert "コ")))
(define-key digraph-map "Go" '(lambda () (interactive) (insert "ゴ")))
(define-key digraph-map "Sa" '(lambda () (interactive) (insert "サ")))
(define-key digraph-map "Za" '(lambda () (interactive) (insert "ザ")))
(define-key digraph-map "Si" '(lambda () (interactive) (insert "シ")))
(define-key digraph-map "Zi" '(lambda () (interactive) (insert "ジ")))
(define-key digraph-map "Su" '(lambda () (interactive) (insert "ス")))
(define-key digraph-map "Zu" '(lambda () (interactive) (insert "ズ")))
(define-key digraph-map "Se" '(lambda () (interactive) (insert "セ")))
(define-key digraph-map "Ze" '(lambda () (interactive) (insert "ゼ")))
(define-key digraph-map "So" '(lambda () (interactive) (insert "ソ")))
(define-key digraph-map "Zo" '(lambda () (interactive) (insert "ゾ")))
(define-key digraph-map "Ta" '(lambda () (interactive) (insert "タ")))
(define-key digraph-map "Da" '(lambda () (interactive) (insert "ダ")))
(define-key digraph-map "Ti" '(lambda () (interactive) (insert "チ")))
(define-key digraph-map "Di" '(lambda () (interactive) (insert "ヂ")))
(define-key digraph-map "TU" '(lambda () (interactive) (insert "ッ")))
(define-key digraph-map "Tu" '(lambda () (interactive) (insert "ツ")))
(define-key digraph-map "Du" '(lambda () (interactive) (insert "ヅ")))
(define-key digraph-map "Te" '(lambda () (interactive) (insert "テ")))
(define-key digraph-map "De" '(lambda () (interactive) (insert "デ")))
(define-key digraph-map "To" '(lambda () (interactive) (insert "ト")))
(define-key digraph-map "Do" '(lambda () (interactive) (insert "ド")))
(define-key digraph-map "Na" '(lambda () (interactive) (insert "ナ")))
(define-key digraph-map "Ni" '(lambda () (interactive) (insert "ニ")))
(define-key digraph-map "Nu" '(lambda () (interactive) (insert "ヌ")))
(define-key digraph-map "Ne" '(lambda () (interactive) (insert "ネ")))
(define-key digraph-map "No" '(lambda () (interactive) (insert "ノ")))
(define-key digraph-map "Ha" '(lambda () (interactive) (insert "ハ")))
(define-key digraph-map "Ba" '(lambda () (interactive) (insert "バ")))
(define-key digraph-map "Pa" '(lambda () (interactive) (insert "パ")))
(define-key digraph-map "Hi" '(lambda () (interactive) (insert "ヒ")))
(define-key digraph-map "Bi" '(lambda () (interactive) (insert "ビ")))
(define-key digraph-map "Pi" '(lambda () (interactive) (insert "ピ")))
(define-key digraph-map "Hu" '(lambda () (interactive) (insert "フ")))
(define-key digraph-map "Bu" '(lambda () (interactive) (insert "ブ")))
(define-key digraph-map "Pu" '(lambda () (interactive) (insert "プ")))
(define-key digraph-map "He" '(lambda () (interactive) (insert "ヘ")))
(define-key digraph-map "Be" '(lambda () (interactive) (insert "ベ")))
(define-key digraph-map "Pe" '(lambda () (interactive) (insert "ペ")))
(define-key digraph-map "Ho" '(lambda () (interactive) (insert "ホ")))
(define-key digraph-map "Bo" '(lambda () (interactive) (insert "ボ")))
(define-key digraph-map "Po" '(lambda () (interactive) (insert "ポ")))
(define-key digraph-map "Ma" '(lambda () (interactive) (insert "マ")))
(define-key digraph-map "Mi" '(lambda () (interactive) (insert "ミ")))
(define-key digraph-map "Mu" '(lambda () (interactive) (insert "ム")))
(define-key digraph-map "Me" '(lambda () (interactive) (insert "メ")))
(define-key digraph-map "Mo" '(lambda () (interactive) (insert "モ")))
(define-key digraph-map "YA" '(lambda () (interactive) (insert "ャ")))
(define-key digraph-map "Ya" '(lambda () (interactive) (insert "ヤ")))
(define-key digraph-map "YU" '(lambda () (interactive) (insert "ュ")))
(define-key digraph-map "Yu" '(lambda () (interactive) (insert "ユ")))
(define-key digraph-map "YO" '(lambda () (interactive) (insert "ョ")))
(define-key digraph-map "Yo" '(lambda () (interactive) (insert "ヨ")))
(define-key digraph-map "Ra" '(lambda () (interactive) (insert "ラ")))
(define-key digraph-map "Ri" '(lambda () (interactive) (insert "リ")))
(define-key digraph-map "Ru" '(lambda () (interactive) (insert "ル")))
(define-key digraph-map "Re" '(lambda () (interactive) (insert "レ")))
(define-key digraph-map "Ro" '(lambda () (interactive) (insert "ロ")))
(define-key digraph-map "WA" '(lambda () (interactive) (insert "ヮ")))
(define-key digraph-map "Wa" '(lambda () (interactive) (insert "ワ")))
(define-key digraph-map "Wi" '(lambda () (interactive) (insert "ヰ")))
(define-key digraph-map "We" '(lambda () (interactive) (insert "ヱ")))
(define-key digraph-map "Wo" '(lambda () (interactive) (insert "ヲ")))
(define-key digraph-map "N6" '(lambda () (interactive) (insert "ン")))
(define-key digraph-map "Vu" '(lambda () (interactive) (insert "ヴ")))
(define-key digraph-map "KA" '(lambda () (interactive) (insert "ヵ")))
(define-key digraph-map "KE" '(lambda () (interactive) (insert "ヶ")))
(define-key digraph-map "Va" '(lambda () (interactive) (insert "ヷ")))
(define-key digraph-map "Vi" '(lambda () (interactive) (insert "ヸ")))
(define-key digraph-map "Ve" '(lambda () (interactive) (insert "ヹ")))
(define-key digraph-map "Vo" '(lambda () (interactive) (insert "ヺ")))
(define-key digraph-map "c|" '(lambda () (interactive) (insert "¢")))
(define-key digraph-map "$$" '(lambda () (interactive) (insert "£")))
(define-key digraph-map "ox" '(lambda () (interactive) (insert "¤")))
(define-key digraph-map "Y-" '(lambda () (interactive) (insert "¥")))
(define-key digraph-map "||" '(lambda () (interactive) (insert "¦")))
(define-key digraph-map "cO" '(lambda () (interactive) (insert "©")))
(define-key digraph-map "-," '(lambda () (interactive) (insert "¬")))
(define-key digraph-map "-=" '(lambda () (interactive) (insert "¯")))
(define-key digraph-map "~o" '(lambda () (interactive) (insert "°")))
(define-key digraph-map "pp" '(lambda () (interactive) (insert "¶")))
(define-key digraph-map "~." '(lambda () (interactive) (insert "·")))
(define-key digraph-map "11" '(lambda () (interactive) (insert "¹")))
(define-key digraph-map "~?" '(lambda () (interactive) (insert "¿")))
(define-key digraph-map "A`" '(lambda () (interactive) (insert "À")))
(define-key digraph-map "A^" '(lambda () (interactive) (insert "Â")))
(define-key digraph-map "A~" '(lambda () (interactive) (insert "Ã")))
(define-key digraph-map "A\"" '(lambda () (interactive) (insert "Ä")))
(define-key digraph-map "A@" '(lambda () (interactive) (insert "Å")))
(define-key digraph-map "E`" '(lambda () (interactive) (insert "È")))
(define-key digraph-map "E^" '(lambda () (interactive) (insert "Ê")))
(define-key digraph-map "E\"" '(lambda () (interactive) (insert "Ë")))
(define-key digraph-map "I`" '(lambda () (interactive) (insert "Ì")))
(define-key digraph-map "I^" '(lambda () (interactive) (insert "Î")))
(define-key digraph-map "I\"" '(lambda () (interactive) (insert "Ï")))
(define-key digraph-map "N~" '(lambda () (interactive) (insert "Ñ")))
(define-key digraph-map "O`" '(lambda () (interactive) (insert "Ò")))
(define-key digraph-map "O^" '(lambda () (interactive) (insert "Ô")))
(define-key digraph-map "O~" '(lambda () (interactive) (insert "Õ")))
(define-key digraph-map "/\\" '(lambda () (interactive) (insert "×")))
(define-key digraph-map "U`" '(lambda () (interactive) (insert "Ù")))
(define-key digraph-map "U^" '(lambda () (interactive) (insert "Û")))
(define-key digraph-map "Ip" '(lambda () (interactive) (insert "Þ")))
(define-key digraph-map "a`" '(lambda () (interactive) (insert "à")))
(define-key digraph-map "a^" '(lambda () (interactive) (insert "â")))
(define-key digraph-map "a~" '(lambda () (interactive) (insert "ã")))
(define-key digraph-map "a\"" '(lambda () (interactive) (insert "ä")))
(define-key digraph-map "a@" '(lambda () (interactive) (insert "å")))
(define-key digraph-map "e`" '(lambda () (interactive) (insert "è")))
(define-key digraph-map "e^" '(lambda () (interactive) (insert "ê")))
(define-key digraph-map "e\"" '(lambda () (interactive) (insert "ë")))
(define-key digraph-map "i`" '(lambda () (interactive) (insert "ì")))
(define-key digraph-map "i^" '(lambda () (interactive) (insert "î")))
(define-key digraph-map "n~" '(lambda () (interactive) (insert "ñ")))
(define-key digraph-map "o`" '(lambda () (interactive) (insert "ò")))
(define-key digraph-map "o^" '(lambda () (interactive) (insert "ô")))
(define-key digraph-map "o~" '(lambda () (interactive) (insert "õ")))
(define-key digraph-map "u`" '(lambda () (interactive) (insert "ù")))
(define-key digraph-map "u^" '(lambda () (interactive) (insert "û")))
(define-key digraph-map "y\"" '(lambda () (interactive) (insert "ÿ")))

;; Custom

; Equal signs
(define-key digraph-map "~~" '(lambda () (interactive) (insert "≈")))
(define-key digraph-map "=~" '(lambda () (interactive) (insert "≃")))
(define-key digraph-map "=." '(lambda () (interactive) (insert "≒")))

; Small bullets
(define-key digraph-map "**" '(lambda () (interactive) (insert "∙")))

; Directional quotes
(define-key digraph-map "\"," '(lambda () (interactive) (insert "“")))
(define-key digraph-map "\"." '(lambda () (interactive) (insert "”")))
(define-key digraph-map "'," '(lambda () (interactive) (insert "‘")))
(define-key digraph-map "'." '(lambda () (interactive) (insert "’")))

; Bullet
(define-key digraph-map ".b" '(lambda () (interactive) (insert "•")))

; Interrobang
(define-key digraph-map "?!" '(lambda () (interactive) (insert "‽")))

; funcapply, for immediately after a function name and before its arguments
(define-key digraph-map "fa" '(lambda () (interactive) (insert "⁡")))

; Lower case superscript letters
(define-key digraph-map "aS" '(lambda () (interactive) (insert "ᵃ")))
(define-key digraph-map "bS" '(lambda () (interactive) (insert "ᵇ")))
(define-key digraph-map "cS" '(lambda () (interactive) (insert "ᶜ")))
(define-key digraph-map "dS" '(lambda () (interactive) (insert "ᵈ")))
(define-key digraph-map "eS" '(lambda () (interactive) (insert "ᵉ")))
(define-key digraph-map "fS" '(lambda () (interactive) (insert "ᶠ")))
(define-key digraph-map "gS" '(lambda () (interactive) (insert "ᵍ")))
(define-key digraph-map "hS" '(lambda () (interactive) (insert "ʰ")))
(define-key digraph-map "iS" '(lambda () (interactive) (insert "ⁱ")))
(define-key digraph-map "jS" '(lambda () (interactive) (insert "ʲ")))
(define-key digraph-map "kS" '(lambda () (interactive) (insert "ᵏ")))
(define-key digraph-map "lS" '(lambda () (interactive) (insert "ˡ")))
(define-key digraph-map "mS" '(lambda () (interactive) (insert "ᵐ")))
(define-key digraph-map "nS" '(lambda () (interactive) (insert "ⁿ")))
(define-key digraph-map "oS" '(lambda () (interactive) (insert "ᵒ")))
(define-key digraph-map "pS" '(lambda () (interactive) (insert "ᵖ")))
; No superscript “q” in unicode
(define-key digraph-map "rS" '(lambda () (interactive) (insert "ʳ")))
(define-key digraph-map "sS" '(lambda () (interactive) (insert "ˢ")))
(define-key digraph-map "tS" '(lambda () (interactive) (insert "ᵗ")))
(define-key digraph-map "uS" '(lambda () (interactive) (insert "ᵘ")))
(define-key digraph-map "vS" '(lambda () (interactive) (insert "ᵛ")))
(define-key digraph-map "wS" '(lambda () (interactive) (insert "ʷ")))
(define-key digraph-map "xS" '(lambda () (interactive) (insert "ˣ")))
(define-key digraph-map "yS" '(lambda () (interactive) (insert "ʸ")))
(define-key digraph-map "zS" '(lambda () (interactive) (insert "ᶻ")))


; Pinyin
(define-key digraph-map "v-" '(lambda () (interactive) (insert "ǖ")))
(define-key digraph-map "v'" '(lambda () (interactive) (insert "ǘ")))
(define-key digraph-map "v<" '(lambda () (interactive) (insert "ǚ")))
(define-key digraph-map "v`" '(lambda () (interactive) (insert "ǜ")))
(define-key digraph-map "V-" '(lambda () (interactive) (insert "Ǖ")))
(define-key digraph-map "V'" '(lambda () (interactive) (insert "Ǘ")))
(define-key digraph-map "V<" '(lambda () (interactive) (insert "Ǚ")))
(define-key digraph-map "V`" '(lambda () (interactive) (insert "Ǜ")))

; Mahjong tiles
(define-key digraph-map "1z" '(lambda () (interactive) (insert "🀀")))
(define-key digraph-map "2z" '(lambda () (interactive) (insert "🀁")))
(define-key digraph-map "3z" '(lambda () (interactive) (insert "🀂")))
(define-key digraph-map "4z" '(lambda () (interactive) (insert "🀃")))
(define-key digraph-map "5z" '(lambda () (interactive) (insert "🀄")))
(define-key digraph-map "6z" '(lambda () (interactive) (insert "🀅")))
(define-key digraph-map "7z" '(lambda () (interactive) (insert "🀆")))
(define-key digraph-map "1m" '(lambda () (interactive) (insert "🀇")))
(define-key digraph-map "2m" '(lambda () (interactive) (insert "🀈")))
(define-key digraph-map "3m" '(lambda () (interactive) (insert "🀉")))
(define-key digraph-map "4m" '(lambda () (interactive) (insert "🀊")))
(define-key digraph-map "5m" '(lambda () (interactive) (insert "🀋")))
(define-key digraph-map "6m" '(lambda () (interactive) (insert "🀌")))
(define-key digraph-map "7m" '(lambda () (interactive) (insert "🀍")))
(define-key digraph-map "8m" '(lambda () (interactive) (insert "🀎")))
(define-key digraph-map "9m" '(lambda () (interactive) (insert "🀏")))
(define-key digraph-map "1s" '(lambda () (interactive) (insert "🀐")))
(define-key digraph-map "2s" '(lambda () (interactive) (insert "🀑")))
(define-key digraph-map "3s" '(lambda () (interactive) (insert "🀒")))
(define-key digraph-map "4s" '(lambda () (interactive) (insert "🀓")))
(define-key digraph-map "5s" '(lambda () (interactive) (insert "🀔")))
(define-key digraph-map "6s" '(lambda () (interactive) (insert "🀕")))
(define-key digraph-map "7s" '(lambda () (interactive) (insert "🀖")))
(define-key digraph-map "8s" '(lambda () (interactive) (insert "🀗")))
(define-key digraph-map "9s" '(lambda () (interactive) (insert "🀘")))
(define-key digraph-map "1p" '(lambda () (interactive) (insert "🀙")))
(define-key digraph-map "2p" '(lambda () (interactive) (insert "🀚")))
(define-key digraph-map "3p" '(lambda () (interactive) (insert "🀛")))
(define-key digraph-map "4p" '(lambda () (interactive) (insert "🀜")))
(define-key digraph-map "5p" '(lambda () (interactive) (insert "🀝")))
(define-key digraph-map "6p" '(lambda () (interactive) (insert "🀞")))
(define-key digraph-map "7p" '(lambda () (interactive) (insert "🀟")))
(define-key digraph-map "8p" '(lambda () (interactive) (insert "🀠")))
(define-key digraph-map "9p" '(lambda () (interactive) (insert "🀡")))
(define-key digraph-map "1f" '(lambda () (interactive) (insert "🀢"))) ; Plum
(define-key digraph-map "2f" '(lambda () (interactive) (insert "🀣"))) ; Orchid
(define-key digraph-map "3f" '(lambda () (interactive) (insert "🀤"))) ; Bamboo
(define-key digraph-map "4f" '(lambda () (interactive) (insert "🀥"))) ; Chrysanthemum
(define-key digraph-map "5f" '(lambda () (interactive) (insert "🀦"))) ; Spring
(define-key digraph-map "6f" '(lambda () (interactive) (insert "🀧"))) ; Summer
(define-key digraph-map "7f" '(lambda () (interactive) (insert "🀨"))) ; Autumn
(define-key digraph-map "8f" '(lambda () (interactive) (insert "🀩"))) ; Winter
(define-key digraph-map "9f" '(lambda () (interactive) (insert "🀪"))) ; Joker
(define-key digraph-map "0z" '(lambda () (interactive) (insert "🀫"))) ; Back

; Shogi
(define-key digraph-map "sw" '(lambda () (interactive) (insert "☖")))
(define-key digraph-map "sb" '(lambda () (interactive) (insert "☗")))

(provide 'vim-digraphs)
