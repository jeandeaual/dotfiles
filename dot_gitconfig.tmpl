[init]
	defaultBranch = master
	templateDir = "~/.config/git/template"
[user]
	name = "Alexis Jeandeau"
	email = {{ .email | quote }}
{{- if not .work }}
	signingkey = 7BD79C2E53F866DB
{{- else }}
	signingkey = 0B0DB8BEF26C467F
{{- end }}
[commit]
	gpgsign = true
[merge]
	conflictStyle = zdiff3
	tool = vimd
[diff]
	guitool = gvimdiff
[pull]
	ff = only
[core]
	autocrlf = false
	editor = vim -f
	filemode = false
	fsmonitor = true
	# Force symlinks (not set by default on Windows)
	symlinks = true
[alias]
	co = checkout
	st = status -sb
	cl = clone
	ci = commit
	br = branch
	s = stash
	sd = stash drop
	sp = stash pop
	spull = !sh -c 'git stash && git pull && git stash pop'
	df = diff
	dt = difftool
	logg = log --color --graph --format=fuller --show-signature
	lg = log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit
	headsha = log --format="%H" -n 1
	who = shortlog -s -n --no-merges
	pushf = push --force-with-lease
	sdcommit = !sh -c 'git stash && git svn dcommit && git stash pop'
	srebase = !sh -c 'git stash && git svn rebase && git stash pop'
	k = !sh -c 'nohup gitk --all &'
	guik = !sh -c '(nohup gitk --all &) && (nohup git gui &)'
	serve = !git daemon --reuseaddr --verbose  --base-path=. --export-all ./.git
	serve2 = !sh -c 'git daemon --reuseaddr --verbose \"$@\" --base-path=. --export-all ./.git' sh
	plfs = !git -c filter.lfs.smudge= -c filter.lfs.required=false pull && git lfs pull
	brshow = config --get-regexp 'branch.*.description'
	brdesc = !git config --get "branch.$(git branch --show-current).description"
{{- if ne .chezmoi.os "darwin" }}
	# Find duplicate files from root
	alldupes = !"git ls-tree -r HEAD | cut -c 13- | sort | uniq -D -w 40"
	# Find duplicate files from the current folder (can also be root)
	dupes = !"cd `pwd`/$GIT_PREFIX && git ls-tree -r HEAD | cut -c 13- | sort | uniq -D -w 40"
{{- end }}
[color]
	ui = true
	branch = auto
	diff = auto
	interactive = auto
	status = auto
[tar "tar.bz2"]
	command = bzip2
[tar "tar.xz"]
	command = xz -c
{{- if .work }}
# Use HTTPS instead of the Git protocol for GitHub
[url "https://github.com"]
	insteadOf = git://github.com
{{- end }}
# Use the SSH instead of HTTPS for Bitbucket (required for 2FA)
[url "git@bitbucket.org:"]
	insteadOf = https://bitbucket.org/
# Clone and push to AUR using the "aur:" prefix
[url "https://aur.archlinux.org/"]
	insteadOf = "aur:"
[url "ssh://aur@aur.archlinux.org/"]
	pushInsteadOf = "aur:"
[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
