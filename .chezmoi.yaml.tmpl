{{- $email := "alexis.jeandeau@gmail.com" -}}
{{- $work := eq .chezmoi.username "alexis.jeandeau" -}}
{{- $devcontainer := or (env "REMOTE_CONTAINERS") (env "CODESPACES") (env "VSCODE_REMOTE_CONTAINERS_SESSION") | not | not -}}

{{- $embedded := false -}}
{{- $wsl := false -}}
{{- if eq .chezmoi.os "linux" -}}
{{-   if lookPath "ip" -}}{{/* Detect Raspberry Pi via its Ethernet MAC address */}}
{{-     if regexMatch "link/ether b8:27:eb:([0-9a-f]{2}:){2}([0-9a-f]{2})" (output "ip" "-o" "link" "show" | lower) }}
{{-       $embedded = true -}}
{{-     end -}}
{{-   else if lookPath "ifconfig" -}}
{{-     if regexMatch "ether b8:27:eb:([0-9a-f]{2}:){2}([0-9a-f]{2})" (output "ifconfig" | lower) }}
{{-       $embedded = true -}}
{{-     end -}}
{{-   end -}}
{{-   if .chezmoi.kernel.osrelease | lower | contains "microsoft" -}}
{{-     $wsl = true -}}
{{-   end -}}
{{- else if eq .chezmoi.os "windows" -}}
{{-   if regexMatch "b8:27:eb:([0-9a-f]{2}:){2}([0-9a-f]{2})" (output "powershell.exe" "-NoProfile" "-Command" "Get-NetAdapter | ForEach-Object { Write-Host $_.MacAddress.ToLower() }") }}{{/* Detect Raspberry Pi via its Ethernet MAC address */}}
{{-     $embedded = true -}}
{{-   end -}}
{{- end -}}

{{- $chassisType := "desktop" -}}
{{- if eq .chezmoi.os "linux" -}}
{{-   if or (stat "/run/.containerenv") (output "cat" "/proc/1/cgroup" | regexMatch "(docker|kubepods)") (and (output "head" "-n" "1" "/proc/1/sched" | hasPrefix "init" | not) (output "head" "-n" "1" "/proc/1/sched" | hasPrefix "systemd" | not)) -}}
{{-     $chassisType = "container" -}}
{{-   else if and (lookPath "hostnamectl") (not $wsl) (not $devcontainer) -}}
{{-     $chassisType = (output "hostnamectl" "--json=short" | mustFromJson).Chassis | trimSuffix "\"" | trimPrefix "\"" -}}
{{-   end -}}
{{- else if eq .chezmoi.os "darwin" -}}
{{-   if contains "MacBook" (output "/usr/sbin/system_profiler" "SPHardwareDataType") -}}
{{-     $chassisType = "laptop" -}}
{{-   else -}}
{{-     $chassisType = "desktop" -}}
{{-   end -}}
{{- else if eq .chezmoi.os "windows" -}}
{{-   $chassisType = output "powershell.exe" "-NoProfile" "-Command" "if (Get-CimInstance -ClassName CIM_Battery) { Write-Host laptop -NoNewLine } else { Write-Host desktop -NoNewLine }" -}}
{{- end -}}

{{- $ephemeral := or $devcontainer (eq $chassisType "container") (eq .chezmoi.username "root" "ubuntu" "vagrant" "vscode") -}}

{{- $serial := "" -}}
{{- if eq .chezmoi.os "darwin" -}}
{{-   $serial = index ioreg "IORegistryEntryChildren" 0 "IOPlatformSerialNumber" -}}
{{- else if eq .chezmoi.os "windows" -}}
{{-   $serial = output "powershell.exe" "-NoProfile" "-Command" "Write-Host (Get-CimInstance -ClassName CIM_BIOSElement).SerialNumber -NoNewLine" -}}
{{-   if or (eq $serial "System Serial Number") (eq $serial "To Be Filled By O.E.M.") -}}
{{-     $serial = "" -}}
{{-   end -}}
{{- else if stat "/sys/firmware/devicetree/base/serial-number" -}}
{{-   $serial = regexReplaceAll "[^0-9A-Za-z]" (output "cat" "/sys/firmware/devicetree/base/serial-number") "" -}}
{{- end -}}

sourceDir: {{ quote .chezmoi.sourceDir }}

{{- if not $ephemeral }}{{/* Disable encryption on containers */}}

encryption: gpg
gpg:
  recipient: {{ quote $email }}
{{- end }}

interpreters:
  py:
{{- if and (ne .chezmoi.os "windows") (lookPath "python3") }}
    command: python3
{{- else }}
    command: python
{{- end }}

{{- if lookPath "pwsh" }}
  ps1:
    command: pwsh
    arguments: -NoLogo
{{- end }}

data:
  devcontainer: {{ $devcontainer }}
  wsl: {{ $wsl }}
  embedded: {{ $embedded }}
  chassistype: {{ quote $chassisType }}
  ephemeral: {{ $ephemeral }}
  serial: {{ quote $serial }}

{{- with .chezmoi.osRelease }}
  steamos: {{ and (eq .id "steamos") (semverCompare "^3" .versionID) }}
{{- else }}
  steamos: false
{{- end }}

{{- if and (lookPath "podman") (not (lookPath "docker")) }}
  dockercmd: podman
{{- else }}
  dockercmd: docker
{{- end }}

{{- if or (not stdinIsATTY) $devcontainer }}{{/* Codespaces and Remote - Containers dotfiles setup is non-interactive */}}
  email: {{ quote $email }}
  work: {{ $work }}
{{- else }}{{/* Interactive setup, so prompt for an email address */}}
  email: {{ promptString "E-mail" $email | quote }}
  work: {{ promptBool "Is this a work environment" $work }}
{{- end }}

{{- if and $devcontainer (lookPath "code") }}
  editor: code --wait
{{- else if lookPath "vim" }}
  editor: vim
{{- else }}
  editor: vi
{{- end }}
