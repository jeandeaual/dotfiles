{{- $plaintext := false -}}
{{- $nerdfont := true -}}

# Wait 50 milliseconds for starship to check files under the current directory.
scan_timeout = 50 # Default: 30
# Timeout for commands executed by starship (in milliseconds).
command_timeout = 1000 # Default: 500

[character]
{{- if $plaintext }}
success_symbol = '[>](bold green)'
error_symbol = '[>](bold red)'
vicmd_symbol = '[<](bold green)'
{{- else }}
# Replace the '❯' symbol in the prompt with '➜'
success_symbol = '[➜](bold green)'
error_symbol = '[➜](bold red)'
vicmd_symbol = '[←](bold green)'
{{- end }}

[cmd_duration]
format = ' [{{ if not $plaintext }}⏱{{ end }} $duration]($style)'
disabled = true

[directory]
format = '[$path]($style)[$read_only]($read_only_style)'
{{- if $plaintext }}
read_only = ' ro'
{{- end }}
truncation_length = 8
truncate_to_repo = false
truncation_symbol = '…/'

[git_branch]
format = ' [$symbol$branch]($style)'
{{- if $plaintext }}
symbol = ''
{{- else if not $nerdfont }}
symbol = '🌱 '
{{- end }}

{{- if $plaintext }}

[git_commit]
tag_symbol = ' tag '
{{- end }}

[git_status]
format = ' ([$all_status$ahead_behind]($style))'
{{- if $plaintext }}
symbol = 'git '
ahead = '>'
behind = '<'
diverged = '<>'
renamed = 'r'
deleted = 'x'
{{- end }}

[hg_branch]
format = ' [$symbol$branch]($style)'
{{- if $plaintext }}
symbol = 'hg '
{{- end }}

[hostname]
format = '[$hostname]($style) '
ssh_only = true

{{- if $plaintext }}

[jobs]
symbol = '<>'
{{- end }}

[memory_usage]
format = ' $symbol[$ram( | $swap)]($style)'
{{- if $plaintext }}
symbol = 'memory '
{{- end }}

[os]
format = '[$symbol]($style)'
{{- if has .chezmoi.os (list "darwin" "windows") }}{{/* Show OS-specific symbols in blue instead of the default */}}
style = 'bold blue'
{{- end }}
disabled = false

[os.symbols]
{{- if $nerdfont }}
AlmaLinux = ' '
Alpine = ' '
Amazon = ' '
Arch = ' '
Artix = ' '
CentOS = ' '
Debian = ' '
EndeavourOS = ' '
Fedora = ' '
FreeBSD = ' '
Garuda = ' '
Gentoo = ' '
Illumos = ' '
Kali = ' '
Linux = ' '
Macos = ' '
Manjaro = ' '
Mint = ' '
NixOS = ' '
OpenBSD = ' '
openSUSE = ' '
Pop = ' '
Raspbian = ' '
Redhat = ' '
RedHatEnterprise = ' '
RockyLinux = ' '
Solus = ' '
SUSE = ' '
Ubuntu = ' '
Unknown = ' '
Void = ' '
Windows = ' '
{{- else }}
Macos = ' ' # Private use, only available on Apple devices
Windows = '⊞ ' # Squared plus symbol
{{- end }}

[shell]
elvish_indicator = '🧝'
{{- if $nerdfont }}
bash_indicator = ''
fish_indicator = '󰈺'
powershell_indicator = '_'
zsh_indicator = '󱆃'
tcsh_indicator = ''
style = 'cyan bold'
disabled = false
{{- end }}

[time]
format = ' [$time]($style)'

[username]
format = '[$user]($style) '

[aws]
format = ' [$symbol($profile)(\($region\))(\[$duration\])]($style)'
{{- if $plaintext }}
symbol = 'aws '
{{- end }}
disabled = true

[c]
format = ' [$symbol($version(-$name))]($style)'
{{- if or $plaintext (not $nerdfont) }}
symbol = 'C '
{{- else if $nerdfont }}
symbol = ' '
{{- end }}

[cmake]
format = ' [$symbol($version)]($style)'
{{- if $plaintext }}
symbol = 'cmake '
{{- end }}

[cobol]
format = ' [$symbol($version )]($style)'
{{- if $plaintext }}
symbol = 'cbl '
{{- end }}

[conda]
format = ' [$symbol$environment]($style)'
{{- if $plaintext }}
symbol = 'conda '
{{- end }}

[crystal]
format = ' [$symbol($version)]($style)'
{{- if $plaintext }}
symbol = 'cr '
{{- else if $nerdfont }}
symbol = ' '
{{- end }}

[dart]
format = ' [$symbol($version)]($style)'
{{- if $plaintext }}
symbol = 'dart '
{{- else if $nerdfont }}
symbol = ' '
{{- end }}

[deno]
format = ' [$symbol($version)]($style)'
{{- if $plaintext }}
symbol = 'deno '
{{- end }}

[docker_context]
format = ' [$symbol$context]($style)'
{{- if $plaintext }}
symbol = 'docker '
{{- else if $nerdfont }}
symbol = '󰡨 '
{{- end }}
{{- if and .work (eq .chezmoi.os "darwin") }}{{/* Disable when using Lima */}}
disabled = true
{{- end }}

[dotnet]
format = ' [$symbol($version)({{ if not $plaintext }}🎯{{ end }} $tfm)]($style)'
{{- if $plaintext }}
symbol = '.NET '
{{- end }}

[elixir]
format = ' [$symbol($version OTP $otp_version\))]($style)\]'
{{- if $plaintext }}
symbol = 'elixir '
{{- else if $nerdfont }}
symbol = ' '
{{- end }}

[elm]
format = ' [$symbol($version)]($style)'
{{- if $plaintext }}
symbol = 'elm '
{{- else if $nerdfont }}
symbol = ' '
{{- end }}

[erlang]
format = ' [$symbol($version)]($style)'
{{- if or $plaintext (not $nerdfont) }}
symbol = 'erl '
{{- else if $nerdfont }}
symbol = ' '
{{- end }}

[gcloud]
format = ' [$symbol$account(@$domain)(\($region\))]($style)'
{{- if $plaintext }}
symbol = 'gcloud '
{{- else if $nerdfont }}
symbol = '󱇶 '
{{- end }}
disabled = true

[godot]
format = ' [$symbol($version)]($style)'
{{- if $plaintext }}
symbol = 'godot '
{{- else if $nerdfont }}
symbol = ' '
{{- end }}
disabled = false

[golang]
format = ' [$symbol($version)]($style)'
{{- if $plaintext }}
symbol = 'go '
{{- else if $nerdfont }}
symbol = '󰟓 '
{{- end }}

[helm]
format = ' [$symbol($version)]($style)'
{{- if $plaintext }}
symbol = 'helm '
{{- end }}

[java]
format = ' [$symbol($version)]($style)'
{{- if $plaintext }}
symbol = 'java '
{{- else if $nerdfont }}
symbol = '󰬷 '
{{- end }}

[julia]
format = ' [$symbol($version)]($style)'
{{- if $plaintext }}
symbol = 'jl '
{{- end }}

[kotlin]
format = ' [$symbol($version)]($style)'
{{- if $plaintext }}
symbol = 'kt '
{{- end }}

[kubernetes]
format = ' [$symbol$context( \($namespace\))]($style)'
{{- if $plaintext }}
symbol = 'k8s '
{{- else if $nerdfont }}
symbol = '󱃾 '
{{- end }}

[lua]
format = ' [$symbol($version)]($style)'
{{- if $plaintext }}
symbol = 'lua '
{{- else if $nerdfont }}
symbol = ' '
{{- end }}

[nim]
format = ' [$symbol($version)]($style)'
{{- if $plaintext }}
symbol = 'nim '
{{- else if $nerdfont }}
symbol = ' '
{{- end }}

[nix_shell]
format = ' [$symbol$state( \($name\))]($style)'
{{- if $plaintext }}
symbol = 'nix '
{{- else if $nerdfont }}
symbol = '󱄅 '
{{- end }}

[nodejs]
format = ' [$symbol($version)]($style)'
{{- if or $plaintext (not $nerdfont) }}
symbol = 'node '
{{- end }}

[ocaml]
format = ' [$symbol($version)(\($switch_indicator$switch_name\))]($style)'
{{- if $plaintext }}
symbol = 'ml '
{{- else if $nerdfont }}
symbol = ' '
{{- end }}

[openstack]
format = ' [$symbol$cloud(\($project\))]($style)'
{{- if $plaintext }}
symbol = 'os '
{{- end }}

[package]
format = ' [$symbol$version]($style)'
{{- if $plaintext }}
symbol = 'pkg '
{{- else if $nerdfont }}
symbol = ' '
{{- end }}

[perl]
format = ' [$symbol($version)]($style)'
{{- if $plaintext }}
symbol = 'pl '
{{- else if $nerdfont }}
symbol = ' ' # Alternative: 
{{- end }}

[php]
format = ' [$symbol($version)]($style)'
{{- if $plaintext }}
symbol = 'php '
{{- else if $nerdfont }}
symbol = ' '
{{- end }}

[pulumi]
format = ' [$symbol$stack]($style)'
{{- if $plaintext }}
symbol = 'pulumi '
{{- else if not $nerdfont }}
symbol = '🛥 '
{{- end }}

[purescript]
format = ' [$symbol($version)]($style)'
{{- if $plaintext }}
symbol = 'purs '
{{- end }}

[python]
format = ' [${symbol}${pyenv_prefix}(${version})(\($virtualenv\))]($style)'
{{- if $plaintext }}
symbol = 'py '
{{- else if $nerdfont }}
symbol = '󰌠 '
{{- end }}
python_binary = ['python', 'python3']

[red]
format = ' [$symbol($version)]($style)'
{{- if $plaintext }}
symbol = 'red '
{{- end }}

[rlang]
format = ' [$symbol($version)]($style)'
{{- if $plaintext }}
symbol = 'r '
{{- else if $nerdfont }}
symbol = ' '
{{- end }}

[ruby]
format = ' [$symbol($version)]($style)'
{{- if $plaintext }}
symbol = 'rb '
{{- else if $nerdfont }}
symbol = ' '
{{- end }}

[rust]
format = ' [$symbol($version)]($style)'
{{- if $plaintext }}
symbol = 'rs '
{{- else if $nerdfont }}
symbol = '󱘗 '
{{- end }}

[scala]
format = ' [$symbol($version)]($style)'
{{- if $plaintext }}
symbol = 'scala '
{{- end }}

[swift]
format = ' [$symbol($version)]($style)'
{{- if $plaintext }}
symbol = 'swift '
{{- else if $nerdfont }}
symbol = '󰛥 '
{{- end }}

[terraform]
format = ' [$symbol$workspace]($style)'
{{- if $plaintext }}
symbol = 'tf '
{{- else if $nerdfont }}
symbol = '󱁢 '
{{- end }}

[vagrant]
format = ' [$symbol($version)]($style)'
{{- if $plaintext }}
symbol = 'vg '
{{- end }}

[vlang]
format = ' [$symbol($version)]($style)'
{{- if $plaintext }}
symbol = 'vlang '
{{- end }}

[zig]
format = ' [$symbol($version)]($style)'
{{- if $plaintext }}
symbol = 'zig '
{{- end }}
